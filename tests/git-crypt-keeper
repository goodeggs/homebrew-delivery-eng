#!/usr/bin/env bash
set -e
set -u
shopt -s expand_aliases
# set -x

__dirname="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# shellcheck disable=2139
alias git-crypt-keeper="$(dirname "$__dirname")/git-crypt-keeper"

cd "$(mktemp -d)"

output="$(mktemp)"

git init .

git commit --allow-empty -m 'initial commit'

unset GITCRYPT_KEY
git-crypt-keeper init | tee "$output"
# this should set GITCRYPT_KEY
eval "$(tail -n1 "$output")"
[ -n "$GITCRYPT_KEY" ] || { echo "expected last line of 'git-crypt-keeper init' to show GITCRYPT_KEY"; exit 1; }
export GITCRYPT_KEY

echo 'hello world' > README.md
cat <<EOF > .gitattributes
secrets filter=git-crypt diff=git-crypt
EOF
git add .
git commit -qm 'README & .gitattributes'
echo 'sekret' > secrets
git add .
git commit -qm 'secrets'

git-crypt-keeper lock
grep -q sekret secrets && { echo 'expected secrets to be encrypted'; exit 1; }

git-crypt-keeper unlock
grep -q sekret secrets || { echo 'expected secrets to be decrypted'; exit 1; }

# let's make a vault
git-crypt-keeper seal
test -f .git-crypt/vault.tgz || { echo 'vault not found'; exit 1; }
tar tvf .git-crypt/vault.tgz | grep -q secrets || { echo 'secrets not found in vault'; exit 1; }
tar tvf .git-crypt/vault.tgz | grep -q README.md && { echo 'found README.md in vault'; exit 1; }

git-crypt-keeper lock
grep -q sekret secrets && { echo 'expected secrets to be encrypted'; exit 1; }
git-crypt-keeper unseal
grep -q sekret secrets || { echo 'expected secrets to be decrypted'; exit 1; }
[[ $(git log --grep 'initial commit' --oneline | wc -l) -eq 1 ]] || { echo 'expected unseal to preserve .git directory'; exit 1; }

git reset --hard HEAD

echo "tests passed!"
